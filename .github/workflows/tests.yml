name: Tests
on:
  pull_request: {}
  push:
    branches: [master]
jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
    strategy:
      fail-fast: false
      matrix:
        include:
        - { python-version: "3.10", os: "ubuntu-latest", session: "safety" }
        - { python-version: "3.10", os: "ubuntu-latest", session: "mypy" }
        - { python-version: "3.9", os: "ubuntu-latest", session: "mypy" }
        - { python-version: "3.8", os: "ubuntu-latest", session: "mypy" }
        - { python-version: "3.10", os: "ubuntu-latest", session: "tests" }
        - { python-version: "3.9", os: "ubuntu-latest", session: "tests" }
        - { python-version: "3.8", os: "ubuntu-latest", session: "tests" }
        - { python-version: "3.10", os: "windows-latest", session: "tests" }
        - { python-version: "3.10", os: "macos-latest", session: "tests" }
        - { python-version: "3.10", os: "ubuntu-latest", session: "xdoctest" }

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3.0.1

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ matrix.pre-release || matrix.python-version }}
        architecture: x64

    - name: Upgrade pip
      run: |
        pip install --constraint=.github/workflows/constraints.txt pip
        pip --version

    - name: Upgrade pip in virtual environments
      shell: python
      run: |
        import os
        import pip
        with open(os.environ["GITHUB_ENV"], mode="a") as io:
            print(f"VIRTUALENV_PIP={pip.__version__}", file=io)

    - name: Install Poetry
      run: |
        pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
        poetry --version

    - name: Install Nox
      run: |
        pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
        pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry
        nox --version

    - name: Run Nox
      env:
      run: |
        nox --python=${{ matrix.python-version }}
