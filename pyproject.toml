[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "sensopy"
description = "Python library for the design and analysis of sensory discrimination tests."
readme = "README.md"
keywords = [
  "discrimination",
  "sensory",
  "triangle",
]
license = "MIT"
maintainers = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" },
]
authors = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = [
  "version",
]
dependencies = [
  "numpy>=1.22.3",
  "scipy<1.12,>=1.8",
]
optional-dependencies.dev = [
  "sensopy[tests]",
]
optional-dependencies.tests = [
  "coverage[toml]>=7.4",
  "pytest>=7.4",
]
urls."Issue Tracker" = "https://github.com/edgarrmondragon/SensoPy/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
features = [
  "dev",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "report",
]
cov = [
  "test-cov",
  "cov-report",
]
report = "coverage {args:report}"

[[tool.hatch.envs.all.matrix]]
python = [
  "3.8",
  "3.9",
  "3.10",
  "3.11",
  "3.12",
]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/sensopy tests}"

[tool.ruff]
line-length = 100

lint.select = [
  "A",
  "ANN",
  "B",
  "C",
  "D",
  "E",
  "ERA",
  "F",
  "I",
  "N",
  "RUF",
  "S",
  "W",
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-undocumented-public-function
  "S101",   # assert
]
lint.unfixable = [
  "ERA",
]
lint.flake8-annotations.allow-star-arg-any = true
lint.flake8-annotations.mypy-init-return = true
lint.flake8-annotations.suppress-dummy-args = true
lint.isort.known-first-party = [
  "sensopy",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"
lint.ignore = [
  "ANN101", # missing-type-self
]

[tool.pytest.ini_options]
addopts = "-vvv -m 'not slow' --durations=3"
markers = [
  "slow: Slow tests tests.",
]

[tool.coverage.paths]
source = [
  "src/sensopy",
  "*/SensoPy/src/sensopy",
  "*/sensopy/src/sensopy",
]
tests = [
  "tests",
  "*/sensopy/tests",
]

[tool.coverage.run]
source_pkgs = [
  "sensopy",
  "tests",
]
branch = true
parallel = true
omit = [
  "src/sensopy/__init__.py",
  "src/sensopy/discrimination/__init__.py",
]

[tool.coverage.report]
show_missing = true
fail_under = 90
exclude_also = [
  "@abstractmethod",
  "@abstractproperty",
  '''if (t\.)?TYPE_CHECKING:''',
]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "scipy.*",
]
